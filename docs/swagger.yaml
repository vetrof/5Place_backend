basePath: /
definitions:
  auth.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/auth.User'
    type: object
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  auth.User:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
      uuid:
        type: string
    type: object
  handlers.Coordinates:
    properties:
      lat:
        type: number
      lon:
        type: number
    type: object
  handlers.ResponseGeneric-array_models_City-handlers_ResponseMeta:
    properties:
      data:
        items:
          $ref: '#/definitions/models.City'
        type: array
      meta:
        $ref: '#/definitions/handlers.ResponseMeta'
    type: object
  handlers.ResponseGeneric-array_models_Country-handlers_ResponseMeta:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Country'
        type: array
      meta:
        $ref: '#/definitions/handlers.ResponseMeta'
    type: object
  handlers.ResponseGeneric-array_models_Place-handlers_ResponseMeta:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Place'
        type: array
      meta:
        $ref: '#/definitions/handlers.ResponseMeta'
    type: object
  handlers.ResponseMeta:
    properties:
      center:
        $ref: '#/definitions/handlers.Coordinates'
      count:
        type: integer
      limit:
        type: integer
      searchRadius:
        type: number
    type: object
  models.City:
    properties:
      country:
        example: Kazakhstan
        type: string
      geom:
        example: POINT(76.8512 43.2220)
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Almaty
        type: string
      points:
        example: 150
        type: integer
    type: object
  models.Country:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: Kazakhstan
        type: string
    type: object
  models.Place:
    properties:
      cityName:
        example: Almaty
        type: string
      desc:
        example: Famous hill with panoramic view of Almaty city
        type: string
      distance:
        example: 1245.67
        type: number
      geom:
        example: POINT(76.9572 43.2316)
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Kok-Tobe Hill
        type: string
      photos:
        example:
        - photo1.jpg
        - photo2.jpg
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API для приложения 5Place - поиск и управление местами
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 5Place API
  version: "1.0"
paths:
  /api/v1/place/cities/{country_id}:
    get:
      parameters:
      - description: ID страны
        in: path
        name: country_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseGeneric-array_models_City-handlers_ResponseMeta'
        "400":
          description: Неверный ID
          schema:
            type: string
      summary: Получить список городов по ID страны
      tags:
      - cities
  /api/v1/place/city/{city_id}:
    get:
      parameters:
      - description: ID города
        in: path
        name: city_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseGeneric-array_models_Place-handlers_ResponseMeta'
        "400":
          description: Неверный ID
          schema:
            type: string
      summary: Получить все места в городе
      tags:
      - places
  /api/v1/place/countries:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseGeneric-array_models_Country-handlers_ResponseMeta'
      summary: Получить список стран
      tags:
      - countries
  /api/v1/place/detail/{place_id}:
    get:
      parameters:
      - description: ID места
        in: path
        name: place_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseGeneric-array_models_Place-handlers_ResponseMeta'
        "400":
          description: Неверный ID
          schema:
            type: string
      summary: Получить детальную информацию о месте
      tags:
      - places
  /api/v1/place/near:
    get:
      parameters:
      - description: Широта
        in: query
        name: lat
        required: true
        type: number
      - description: Долгота
        in: query
        name: long
        required: true
        type: number
      - description: Максимальное количество (1-100)
        in: query
        name: limit
        type: integer
      - description: Радиус поиска в метрах (по умолчанию 5000)
        in: query
        name: radius
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseGeneric-array_models_Place-handlers_ResponseMeta'
        "400":
          description: Invalid lat or long
          schema:
            type: string
      summary: Найти места рядом с координатами
      tags:
      - places
  /api/v1/place/random:
    get:
      parameters:
      - description: ID страны
        in: query
        name: country
        type: integer
      - description: ID города
        in: query
        name: city
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseGeneric-array_models_Place-handlers_ResponseMeta'
        "400":
          description: Invalid query parameters
          schema:
            type: string
      summary: Получить случайные места
      tags:
      - places
  /auth/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя и возвращает JWT токен
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Авторизация пользователя
      tags:
      - auth
  /auth/profile:
    get:
      description: Возвращает информацию о текущем пользователе
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Получить профиль пользователя
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя в системе
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация нового пользователя
      tags:
      - auth
schemes:
- http
- https
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Операции авторизации и аутентификации
  name: auth
- description: Операции со странами
  name: countries
- description: Операции с городами
  name: cities
- description: Операции с местами и достопримечательностями
  name: places
